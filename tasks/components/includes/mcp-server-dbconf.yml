
#
# Database reset (when flag enabled)
#

- name: "Drop MCP database"
  mysql_db:
    name: "MCP"
    state: "absent"
  when: archivematica_src_reset_mcpdb|bool or archivematica_src_reset_am_all|bool

- name: "Remove mysql_dev.complete file created by mysql_dev.sh"
  file:
    path: "{{ archivematica_src_dir }}/archivematica/src/MCPServer/share/mysql_dev.complete"
    state: "absent"
  when: archivematica_src_reset_mcpdb|bool or archivematica_src_reset_am_all|bool

# TODO where should this go?
- name: "Reset ElasticSearch indexes"
  command: "{{ archivematica_src_dir }}/archivematica/localDevSetup/eraseElasticSearchIndexes.py -f"
  when: archivematica_src_reset_es|bool or archivematica_src_reset_am_all|bool

#
# Database configuration
#

# Note that when we are using mysql_db and mysql_user we are assuming that the
# root user has a local ~/.my.cnf configuration file with the credentials in it
# for the MySQL user.

- name: "Create MySQL database"
  mysql_db:
    name: "MCP"
    state: "present"
    encoding: "utf8"
    collation: "utf8_unicode_ci"
  register: "createdb_result"

# TODO: need to change the mysql password for user archivematica

- name: "Create MySQL user"
  mysql_user:
    name: "archivematica"
    password: "demo"
    priv: "MCP.*:ALL"
    state: "present"

- name: "Check if mysql_dev exists"
  stat:
    path: "{{ archivematica_src_dir }}/archivematica/src/MCPServer/share/mysql_dev.sh"
  register: "mysql_dev_sh_check"

- name: "Set migrations path"
  set_fact:
    archivematica_src_am_pre_migration: "{{mysql_dev_sh_check.stat.exists}}"

# mysql-dev migrations
- name: "Load MySQL seed file"
  mysql_db:
    name: "MCP"
    state: "import"
    target: "{{ archivematica_src_dir }}/archivematica/src/MCPServer/share/mysql"
  when: "createdb_result|changed and archivematica_src_am_pre_migration|bool"

- name: "Run syncdb"
  django_manage:
    command: "syncdb"
    app_path: "/usr/share/archivematica/dashboard/"
    settings: "settings.common"
    pythonpath: "/usr/lib/archivematica/archivematicaCommon"
  tags: amsrc-pipeline-dbconf-syncdb
  when: archivematica_src_am_pre_migration|bool

- name: "Call mysql_dev script"
  command: "./mysql_dev.sh MCP"
  args:
    chdir: "{{ archivematica_src_dir }}/archivematica/src/MCPServer/share/"
    creates: "{{ archivematica_src_dir }}/archivematica/src/MCPServer/share/mysql_dev.complete"
  when: archivematica_src_am_pre_migration|bool

# Django migrations
- name: "Run migrations"
  django_manage:
    command: "migrate"
    app_path: "/usr/share/archivematica/dashboard/"
    settings: "settings.common"
    pythonpath: "/usr/lib/archivematica/archivematicaCommon"
  tags: "amsrc-pipeline-dbconf-syncdb"
  when: "not archivematica_src_am_pre_migration|bool"
