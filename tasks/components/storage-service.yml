---

# Archivematica Storage Service installer

# This file is divided into the following blocks:
#   0- Clone source repo
#   1- OS dependencies (debian packages)
#   2- python dependencies (pip packages)
#   3- OS configuration (user/directory/file creation/permissions/ownership )
#   5- Django bootstrap
#   6- web server config


###########################################################
#   0- Clone source repo
###########################################################

- name: "Checkout archivematica-storage-service code"
  git:
    repo: "{{ archivematica_src_ss_repo }}"
    dest: "{{ archivematica_src_ss_src_dir }}"
    update: "yes"
    version: "{{ archivematica_src_ss_version }}"
    force: "yes"
  tags: "amsrc-ss-clone"

- name: "Checkout out archivematica-sampledata repository"
  git:
    repo: "https://github.com/artefactual/archivematica-sampledata.git"
    dest: "~/archivematica-sampledata"
    update: "no"
    depth: "1"
    accept_hostkey: "yes"
  when: "archivematica_src_install_sample_data|bool"
  become: "no"


###########################################################
#   1- OS dependencies (debian packages)
###########################################################

- name: "Install archivematica-storage-service package dependencies"
  apt:
    pkg: "{{ item }}"
    state: "latest"
  with_items: "{{ archivematica_src_ss_pkgdeps }}"
  tags: "amsrc-ss-osdep"


###########################################################
#   2- Python dependencies (pip packages)
###########################################################

- name: "Install archivematica-storage-service virtualenv with upgraded pip"
  pip:
    name: "pip"
    virtualenv: "{{ archivematica_src_ss_env_dir }}"
    state: "latest"
  tags: "amsrc-ss-pydep"

- name: "Install archivematica-storage-service Python dependencies in virtualenv"
  pip:
    requirements: "{{ item.path }}"
    virtualenv: "{{ archivematica_src_ss_env_dir }}"
    extra_args: "--find-links lib"
    state: "latest"
  when: "{{ item.environment == 'any' or item.environment == archivematica_src_environment_type }}"
  with_items:
    - path: "{{ archivematica_src_ss_src_dir }}/requirements/production.txt"
      environment: "production"
    - path: "{{ archivematica_src_ss_src_dir }}/requirements/local.txt"
      environment: "development"
    - path: "{{ archivematica_src_ss_src_dir }}/requirements/test.txt"
      environment: "development"
  tags: "amsrc-ss-pydep"


###########################################################
#   3- OS configuration (user/directory/file creation/permissions/ownership )
###########################################################

- name: "Create subdirectories for archivematica-storage-service"
  file:
    dest: "{{ item }}"
    state: "directory"
  with_items:
    - "/var/archivematica/storage-service"
  tags: "amsrc-ss-osconf"

- name: "Set owner, group, mode of /var/archivematica recursively"
  file:
    dest: "/var/archivematica"
    state: "directory"
    recurse: "yes"
    owner: "{{ archivematica_user }}"
    group: "{{ archivematica_group }}"
    mode: "u=rwX,g=rwX,o=rX"
  tags: "amsrc-ss-osconf"

- name: "Create archivematica-storage-service log directories"
  file:
    dest: "{{ item }}"
    state: "directory"
    owner: "{{ archivematica_user }}"
    group: "{{ archivematica_group }}"
    mode: "g+s"
  with_items:
    - "/var/log/archivematica/storage-service"
  tags: "amsrc-ss-osconf"

- name: "Touch SS log files"
  file:
    path: "/var/log/archivematica/storage-service/{{ item }}"
    owner: "{{ archivematica_user }}"
    group: "{{ archivematica_group }}"
    state: "touch"
  with_items:
    - "storage_service.log"
    - "storage_service_debug.log"
  tags: "amsrc-ss-osconf"


###########################################################
#   4- Django bootstrap
###########################################################

- name: "Run SS django collectstatic"
  django_manage:
    command: "collectstatic"
    app_path: "{{ archivematica_src_ss_app_dir }}"
    virtualenv: "{{ archivematica_src_ss_env_dir }}"
  environment: "{{ archivematica_src_ss_environment }}"
  tags: "amsrc-ss-code"

- name: "Remove SS DB"
  file:
    state: "absent"
    path: "{{ archivematica_src_ss_env_ss_db_name }}"
  when: "archivematica_src_reset_ss_db|bool"
  tags: "amsrc-ss-db"

- name: "Run SS django database migrations"
  django_manage:
    command: "migrate"
    app_path: "{{ archivematica_src_ss_app_dir }}"
    virtualenv: "{{ archivematica_src_ss_env_dir }}"
  environment: "{{ archivematica_src_ss_environment }}"
  tags: "amsrc-ss-db"
  become_user: "{{ archivematica_user }}"


###########################################################
#   5- web server config
###########################################################

- name: "Remove Nginx default server"
  file:
    path: "{{ item }}"
    state: "absent"
  with_items:
    - "/etc/nginx/sites-available/default"
    - "/etc/nginx/sites-available/default.conf"
    - "/etc/nginx/sites-enabled/default"
    - "/etc/nginx/sites-enabled/default.conf"
  tags: "amsrc-ss-websrv"

- name: "Install Nginx storage server"
  template:
    src: "etc/nginx/sites-available/storage.conf"
    dest: "/etc/nginx/sites-available/storage.conf"
    backup: "yes"
  tags: "amsrc-ss-websrv"

- name: "Enable Nginx storage server"
  file:
    src: "/etc/nginx/sites-available/storage.conf"
    dest: "/etc/nginx/sites-enabled/storage.conf"
    state: "link"
  tags: "amsrc-ss-websrv"

- name: "Ensure that /etc/archivematica exists"
  file:
    path: "/etc/archivematica"
    state: "directory"
    recurse: "yes"
  tags: "amsrc-ss-websrv"

- name: "Install gunicorn configuration file"
  template:
    src: "etc/archivematica/storage-service.gunicorn-config.py"
    dest: "/etc/archivematica/storage-service.gunicorn-config.py"
    backup: "yes"
  tags: "amsrc-ss-websrv"

- name: "Install archivematica-storage-service upstart service"
  template:
    src: "etc/init/archivematica-storage-service.conf"
    dest: "/etc/init/archivematica-storage-service.conf"
    backup: "yes"
  tags: "amsrc-ss-websrv"

- name: "Reload upstart"
  command: "initctl reload-configuration"

- name: "Enable services"
  service:
    name: "{{ item }}"
    state: "restarted"
    enabled: "yes"
  with_items:
    - "nginx"
    - "archivematica-storage-service"
  tags: "amsrc-ss-websrv"
