---

#
# Common tasks
#

- name: "Load OS-specific vars"
  include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - "always" # inocuous to use always here

- name: "Set fact: type of environment"
  set_fact:
    is_dev: "{{ archivematica_src_environment_type == 'development' }}"
    is_prod: "{{ archivematica_src_environment_type == 'production' }}"
  tags: "always" # inocuous to use always here

- name: "Install necessary packages required by this role"
  package:
    name: "{{ item }}"
    state: "latest"
  with_items: "{{ ansible_deps }}"
  tags: "always" # inocuous to use always here

- name: "Include common.yml common tasks for all components"
  include: "common.yml"
  tags: # do not use "always" tag in role, to avoid issues when including other roles in a playbook
    - "amsrc-common"
    - "amsrc-ss"
    - "amsrc-pipeline"
    - "amsrc-devtools"
    - "amsrc-automationtools"
    - "amsrc-fixity"


#
# archivematica-storage-service
#

- include: "ss-main.yml"
  tags:
    - "amsrc-ss"
  when: "archivematica_src_install_ss|bool"

- include: "ss-db.yml"
  tags:
    - "amsrc-ss"
    - "amsrc-ss-db"
  when: "archivematica_src_install_ss|bool"

- include: "ss-websrv-gunicorn.yml"
  tags:
    - "amsrc-ss"
    - "amsrc-ss-websrv"
  when: "archivematica_src_install_ss|bool"


#
# Pipeline:
# - archivematica-dashboard
# - archivematica-mcp-server
# - archivematica-mcp-client
#
#   0- Clone source repo
#   1- OS dependencies (debian packages)
#   2- python dependencies (pip packages)
#   3- OS configuration (user/directory/file creation/permissions/ownership)
#   4- Code install
#   5- Database config
#   6- web server config

- include: "pipeline-clonecode.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-clonecode"
  when: "archivematica_src_install_am|bool"

- include: "pipeline-osdeps.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-osdeps"
  when: "archivematica_src_install_am|bool"

- include: "pipeline-pip-deps.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-pipdeps"
  when: "archivematica_src_install_am|bool"

- include: "pipeline-osconf.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-osconf"
  when: "archivematica_src_install_am|bool"

- include: "pipeline-instcode.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-instcode"
  when: "archivematica_src_install_am|bool"

- include: "pipeline-dbconf.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-dbconf"
  when: "archivematica_src_install_am|bool"

- include: "pipeline-es.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-es"
  when: "archivematica_src_install_am|bool"

- include: "pipeline-websrv-gunicorn.yml"
  tags:
    - "amsrc-pipeline"
    - "amsrc-pipeline-websrv"
  when: "archivematica_src_install_am|bool"


#
# archivematica-sampledata
#

- name: "Checkout out archivematica-sampledata repository"
  git:
    repo: "https://github.com/artefactual/archivematica-sampledata.git"
    dest: "~/archivematica-sampledata"
    update: "yes"
    depth: 1
  when: "archivematica_src_install_sample_data|bool"
  become: "no"

- name: "Generate special sampledata transfers"
  command: "~/archivematica-sampledata/createtransfers/createtransfers.py {{ item }}"
  with_items:
    - "create-variously-encoded-files"
    - "create-deep-transfers"
  when: "archivematica_src_install_sample_data|bool"
  become: "no"

#
# archivematica-devtools
#

- include: "am-devtools.yml"
  tags:
    - "amsrc-devtools"
  when: "archivematica_src_install_devtools|bool"


#
# automation-tools
#

- include: "automation-tools.yml"
  tags:
    - "amsrc-automationtools"
  when: "archivematica_src_install_automationtools|bool"


#
# acceptance-tests
#

- include: "acceptance-tests.yml"
  tags:
    - "amsrc-acceptancetests"
  when: "archivematica_src_install_acceptance_tests|bool"


#
# fixity
#

- include: "fixity.yml"
  tags:
    - "amsrc-fixity"
  when: "archivematica_src_install_fixity|bool"
