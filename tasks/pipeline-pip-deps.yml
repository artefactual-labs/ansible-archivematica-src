---

- name: "Destroy virtualenv if it's still using Python 2"
  block:
    - name: "Capture current Python version"
      command: |-
        {{ archivematica_src_am_virtualenv }}/bin/python -c
          'import sys; sys.stdout.write("{}".format(sys.version_info[0])); sys.stdout.flush();'
      ignore_errors: yes
      register: "pyver_check"
    - name: "Destroy Python 2 virtualenv"
      file:
        path: "{{ archivematica_src_am_virtualenv }}"
        state: "absent"
      when: "pyver_check.rc == 0 and pyver_check.stdout == '2'"

- name: "Create virtualenv and install pip-tools"
  pip:
    virtualenv: "{{ archivematica_src_am_virtualenv }}"
    virtualenv_command: "{{ archivematica_src_virtualenv }}"
    name: "pip-tools=={{ archivematica_src_pip_tools_version }}"

- name: "Synchronize requirements"
  command: "{{ archivematica_src_am_virtualenv }}/bin/pip-sync {{ 'requirements-dev.txt' if is_dev else 'requirements.txt' }}"
  args:
    chdir: "{{ archivematica_src_dir }}/archivematica"
  environment:
    LC_ALL: "en_US.utf8"
    LANG: "en_US.utf8"
