---

- name: "Install packages"
  package:
    name: "{{ archivematica_src_am_amauat_deps }}"
    state: present
    update_cache: yes

- name: "Get git config global safe directories dir"
  shell: "git config --global --get-all safe.directory || echo ''"
  register: "__git_config_global_safe_dir"

- name: "Set Fixity source directory as git safe dir"
  command: "git config --global --add safe.directory {{ archivematica_src_dir }}/archivematica-acceptance-tests"
  when:
    - archivematica_src_dir + '/fixity' not in __git_config_global_safe_dir.stdout_lines

- name: "Checkout acceptance tests repository"
  git:
    repo: "https://github.com/artefactual-labs/archivematica-acceptance-tests.git"
    dest: "{{ archivematica_src_dir }}/archivematica-acceptance-tests"
    version: "{{ archivematica_src_acceptance_tests_version }}"
    force: "yes"

# this task is needed to avoid problems when upgrading python package
- name: "Remove old virtualenv default dir"
  file:
    state: absent
    path: "/usr/share/python/archivematica-acceptance-tests/"

- name: "Ensure archivematica user can create virtualenv"
  file:
    path: "/usr/share/archivematica/virtualenvs"
    owner: "archivematica"
    group: "archivematica"
    state: "directory"
  tags: "amsrc-ss-pydep"

- name: "Install pip dependencies in virtualenv"
  become: "yes"
  become_user: "archivematica"
  pip:
    chdir: "{{ archivematica_src_dir }}/archivematica-acceptance-tests"
    requirements: "requirements.txt"
    virtualenv: "/usr/share/archivematica/virtualenvs/archivematica-acceptance-tests"
    virtualenv_command: "{{ archivematica_src_virtualenv }}"
    virtualenv_python: "{{ archivematica_src_virtualenv_python }}"
    state: latest

#
# Install Firefox
#
- name: "Install packages"
  block:
  - name: "Install Firefox"
    package:
      name: "firefox"
      state: present
    when:
      - "'Firefox' in archivematica_src_acceptance_tests_browser_list"

  - name: "Install Chrome"
    block:
      - set_fact:
          chrome_package: >-
            {%- if ansible_os_family == "Debian" and ansible_architecture == "x86_64" -%}
              https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            {%- elif ansible_os_family in ['Redhat','Rocky']-%}
              https://dl.google.com/linux/direct/google-chrome-stable_current_{{ ansible_architecture }}.rpm
            {%- else -%}
              google-chrome-stable
            {%- endif -%}

      - name: "Ensure dependencies are present"
        package:
          name:
            - unzip
          state: present

      - name: "Install Chrome (Deb)"
        apt:
          deb: "{{ chrome_package }}"
          update_cache: yes
        when: ansible_os_family == "Debian"

      - name: "Install Chrome (RH)"
        dnf:
          name: "{{ chrome_package }}"
          state: present
          update_cache: yes
        when: ansible_os_family in ['RedHat','Rocky']

      - name: Download and install ChromeDriver
        unarchive:
          src: https://chromedriver.storage.googleapis.com/{{ archivematica_src_acceptance_tests_chromedriver_version }}/chromedriver_linux64.zip
          dest: /usr/local/bin
          remote_src: yes

      - name: "Set permissions"
        file:
          path: "/usr/local/bin/chromedriver"
          owner: root
          group: root
          mode: 0755
          state: file
    when: "'Chrome' in archivematica_src_acceptance_tests_browser_list"
