---
#
# Basic service configuration
#  - gunicorn configuration
#  - environment vars
#  - services
#

- name: "set_fact: set gunicorn path to correct value"
  set_fact:
    dashboard_gunicorn_path: "{{ archivematica_src_am_dashboard_virtualenv }}/bin/gunicorn"

- name: "Clear shared directory"
  file:
    dest: "{{ archivematica_src_shareddir }}"
    state: "absent"
  when: "archivematica_src_reset_shareddir|bool or archivematica_src_reset_am_all|bool"

- name: "Create shared directory"
  file:
    dest: "{{ archivematica_src_shareddir }}"
    state: "directory"
    owner: "archivematica"
    group: "archivematica"
    mode: "0755"
  when: "archivematica_src_reset_shareddir|bool or archivematica_src_reset_am_all|bool"

- name: "Clear automation-tools db"
  file:
    dest: "/var/archivematica/automation-tools/transfers.db"
    state: "absent"
  when:
    - "archivematica_src_reset_shareddir|bool or archivematica_src_reset_am_all|bool"
    - "archivematica_src_install_automationtools|bool"

- name: "Configure environment vars"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: "yes"
  with_items:
    - src: "etc/sysconfig/archivematica-mcp-server.j2"
      dest: "{{ systemd_environment_path }}/archivematica-mcp-server"
    - src: "etc/sysconfig/archivematica-mcp-client.j2"
      dest: "{{ systemd_environment_path }}/archivematica-mcp-client"
    - src: "etc/sysconfig/archivematica-dashboard.j2"
      dest: "{{ systemd_environment_path }}/archivematica-dashboard"


#
# logging
#

- name: "Configure backward-compatible logging (dashboard)"
  template:
    src: "{{ item }}"
    dest: /etc/archivematica/{{ item | basename | regex_replace('\.j2','') }}
    backup: "yes"
  with_first_found:
    - "templates/{{ inventory_hostname }}/dashboard.logging.json.j2"
    - "templates/dashboard.logging.json.j2"
    - "etc/archivematica/dashboard.logging.json.j2"
  when: "archivematica_src_logging_backward_compatible|bool"

- name: "Configure backward-compatible logging (MCPServer)"
  template:
    src: "{{ item }}"
    dest: /etc/archivematica/{{ item | basename | regex_replace('\.j2','') }}
    backup: "yes"
  with_first_found:
    - "templates/{{ inventory_hostname }}/serverConfig.logging.json.j2"
    - "templates/serverConfig.logging.json.j2"
    - "etc/archivematica/serverConfig.logging.json.j2"
  when: "archivematica_src_logging_backward_compatible|bool"

- name: "Configure backward-compatible logging (MCPClient)"
  template:
    src: "{{ item }}"
    dest: /etc/archivematica/{{ item | basename | regex_replace('\.j2','') }}
    backup: "yes"
  with_first_found:
    - "templates/{{ inventory_hostname }}/clientConfig.logging.json.j2"
    - "templates/clientConfig.logging.json.j2"
    - "etc/archivematica/clientConfig.logging.json.j2"
  when: "archivematica_src_logging_backward_compatible|bool"



- name: "Remove backward-compatible logging"
  file:
    path: "{{ item }}"
    state: "absent"
  with_items:
    - "/etc/archivematica/dashboard.logging.json"
    - "/etc/archivematica/clientConfig.logging.json"
    - "/etc/archivematica/serverConfig.logging.json"
  when: "not archivematica_src_logging_backward_compatible|bool"

#
# systemd
#

- name: "systemd | Install configuration files"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    backup: "yes"
  when:
    - "ansible_service_mgr == 'systemd'"
  with_items:
    - src: "etc/systemd/system/archivematica-mcp-server.service.j2"
      dest: "/etc/systemd/system/archivematica-mcp-server.service"
    - src: "etc/systemd/system/archivematica-mcp-client.service.j2"
      dest: "/etc/systemd/system/archivematica-mcp-client.service"
    - src: "etc/systemd/system/archivematica-dashboard.service.j2"
      dest: "/etc/systemd/system/archivematica-dashboard.service"

- name: "Reload systemd config"
  command: "systemctl daemon-reload"
  when:
    - "ansible_service_mgr == 'systemd'"

- name: "Enable services"
  systemd:
    name: "{{ item }}"
    state: "restarted"
    enabled: "yes"
    daemon_reload: "yes"
  with_items:
    - "archivematica-mcp-server"
    - "archivematica-mcp-client"
    - "archivematica-dashboard"
    - "fits-nailgun"
  when:
    - ansible_service_mgr == "systemd"
