---

#
# Prepare pip
#

- name: "Ensure pip is not installed from packages"
  package:
    name: "{{ item }}"
    state: "absent"
  with_items:
    - "python-pip"
    - "python2-pip"

- name: "Download get-pip.py"
  get_url:
    url: "https://bootstrap.pypa.io/get-pip.py"
    dest: "/root/get-pip.py"

- name: "Install pip with get-pip.py"
  command: "python get-pip.py"
  args:
    chdir: "/root/"

- name: "Install virtualenv with pip"
  pip:
    name: "{{ item }}"
    state: "latest"
  with_items:
    - "virtualenv"


#
# Create `archivematica` user
#

- name: "Create user archivematica"
  user:
    name: "archivematica"
    uid: "333"
    system: "yes"
    groups: "audio"
    home: "/var/lib/archivematica"

- name: "Add archivematica user permissions in visudo file"
  lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    regexp: "^archivematica ALL\\="
    line: "archivematica ALL=NOPASSWD:/bin/mv,/bin/chown,/bin/chmod,/usr/bin/find,/usr/bin/gs,/usr/bin/inkscape"
    validate: "/usr/sbin/visudo -cf %s"


#
# Prepare `archivematica_src_dir`
#

- name: "Expand archivematica_src_dir"
  set_fact:
    archivematica_src_dir: "{{ archivematica_src_dir|expanduser }}"

- name: "Create archivematica_src_dir"
  file:
    state: "directory"
    path: "{{ archivematica_src_dir }}"

#
# Set archivematica_src_ca_custom_bundle if not defined
#

- set_fact:
    archivematica_src_ca_custom_bundle: "/etc/ssl/certs/ca-certificates.crt"
  when: archivematica_src_ca_custom_bundle is undefined and ansible_os_family == "Debian"

- set_fact:
    archivematica_src_ca_custom_bundle: "/etc/pki/tls/certs/ca-bundle.crt"
  when: archivematica_src_ca_custom_bundle is undefined and ansible_os_family == "RedHat"
