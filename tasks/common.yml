---

- name: "Expand archivematica_src_dir"
  set_fact:
    archivematica_src_dir: "{{ archivematica_src_dir|expanduser }}"

#
# Create `archivematica` user
#

- name: "Create user archivematica"
  user:
    name: "archivematica"
    uid: "333"
    system: "yes"
    groups: "audio"
    home: "/var/lib/archivematica"

#
# Prepare pip
#

- name: "Common configuration for source installs"
  block:
  # Needed to install python packages in CentOS/RHEL7
  - name: "Add SCL repo in CentOS/RHEL 7"
    yum:
      name: "centos-release-scl"
      state: "present"
    when:
      - ansible_os_family in ['RedHat','Rocky']
      - ansible_distribution_major_version|int == 7

  - name: "Add Deadsnakes APT repository (Ubuntu)"
    apt_repository:
      repo: "ppa:deadsnakes"
    when:
      - ansible_os_family == "Debian"

  # Not using package in next task because it is slower than apt or yum modules.
  # The package module is not installing the every list of packages at the same time
  # Using the install-packages.yml task file prepared for osdeps

  # Ensure Python 3 is installed
  - include_tasks: "install-packages.yml"
    vars:
      packages: "{{ archivematica_src_python_packages }}"
      name: "Python 3"
      state: "present"
    when:
      - archivematica_src_python_packages|length>0

  - name: "Create python38 symbolic link in CentOS/RHEL7"
    file:
      src: "/opt/rh/rh-python38/root/usr/bin/python3.8"
      dest: "/usr/bin/python3.8"
      state: "link"
    when:
      - ansible_os_family == 'RedHat'
      - ansible_distribution_major_version|int == 7

  - name: "Set python3 as default python (CentOS/RHEL/Rocky) >= 8.0"
    command: alternatives --set python /usr/bin/python3
    changed_when: False
    failed_when: false
    check_mode: false
    when:
      - ansible_os_family in ['Rocky','RedHat']
      - ansible_distribution_major_version|int >= 8

  - name: "Download get-pip.py in archivematica userdir"
    get_url:
      url: "https://bootstrap.pypa.io/get-pip.py"
      force: "yes"
      dest: "/var/lib/archivematica/get-pip.py"
      owner: "archivematica"
      group: "archivematica"

  - name: "Install pip with get-pip.py as archivematica user"
    become: "yes"
    become_user: "archivematica"
    command: "{{ archivematica_src_virtualenv_python }} get-pip.py pip=={{ archivematica_src_pip_version }}"
    args:
      chdir: "/var/lib/archivematica"

  - name: "Install virtualenv with pip"
    become: "yes"
    become_user: "archivematica"
    pip:
      name: "virtualenv"
      executable: "{{ archivematica_src_pip }}"
      extra_args: "--user --ignore-installed"
      state: "latest"

  #
  # Prepare `archivematica_src_dir`
  #

  - name: "Create archivematica_src_dir"
    file:
      state: "directory"
      path: "{{ archivematica_src_dir }}"
  when:
    - (archivematica_src_install_am|bool or archivematica_src_install_ss|bool)

#
# Configure RPM repositories and dependencies
#

- name: "Configure rpm-install dependencies"
  block:

  - name: "Install necessary packages required by rpms"
    yum:
      name:
        - "python-virtualenv"
        - "python-pip"
      state: "present"

  - name: "Add AM repos"
    yum_repository:
      name: "{{ item.key }}"
      description: "{{ item.key }}"
      baseurl: "{{ item.value.baseurl }}"
      gpgkey: "{{ item.value.gpgkey|default('https://packages.archivematica.org/1.10.x/key.asc') }}"
      gpgcheck: "{{ item.value.gpgcheck|default('1') }}"
    loop: "{{ lookup('dict',archivematica_src_rpm_repositories) }}"
    when: install_rpm_repositories|bool

  when: (archivematica_src_install_am == "rpm" or archivematica_src_install_ss == "rpm")

#
# SELinux configuration
#

- name: "Configure SELinux httpd permissions"
  become: "yes"
  seboolean:
    name: "{{ item }}"
    state: "yes"
    persistent: "yes"
  with_items:
    - "httpd_can_network_connect"       # Allow nginx connections to Gunicorn
    - "httpd_can_network_connect_db"    # Allow nginx to connect to MySQL
    - "httpd_setrlimit"                 # Allow nginx to change system limits
  when:
    - ansible_selinux is defined and ansible_selinux != False and ansible_selinux.status == 'enabled'
    - ansible_os_family in ['RedHat','Rocky']

- name: "SELinux: Allow nginx to use ports 8000 and 8001"
  become: "yes"
  seport:
    ports: "8000,8001"
    proto: "tcp"
    setype: "http_port_t"
    state: "present"
  when:
    - ansible_selinux is defined and ansible_selinux != False and ansible_selinux.status == 'enabled'
    - ansible_os_family in ['RedHat','Rocky']

- name: "Change home dir perms (to make transfer source visible)"
  command: "chmod 755 $HOME"
  tags: "homeperms"
  become: "no"
  when:
    - ansible_os_family in ['RedHat','Rocky']
