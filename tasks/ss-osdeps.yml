---
# osdeps filenames named "distribution"-"major_version".json
#        example: CentOS-7.yml (case sensitive)
- set_fact:
    osdeps_file: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.json"
    tmpdirname: "/tmp/amsrc-{{ ansible_date_time.date }}-{{ ansible_date_time.epoch }}"

# become: false is required in tasks delegated to localhost
# (to avoid "sudo: a password is required" error)
- name: "create temp directory in local machine to store osdeps files"
  file:
    path: "{{ tmpdirname }}/osdeps"
    state: "directory"
  become: false
  delegate_to: "127.0.0.1"

- name: "stat for osdeps file"
  stat:
    path: "{{ archivematica_src_dir }}/archivematica-storage-service/osdeps/{{ osdeps_file }}"
  register: od

- name: "set_fact osdeps"
  set_fact:
    osdeps: "{{ od.stat.exists is defined and od.stat.exists }}"

- name: "fetch dependencies files from source code repository to local machine"
  fetch:
    src: "{{ archivematica_src_dir }}/archivematica-storage-service/osdeps/{{ osdeps_file }}"
    dest: "{{ tmpdirname }}/osdeps/archivematica-storage-service/{{ osdeps_file }}"
    flat: "yes"
  become: false       # ansible recommends to run fetch without become whenever possible
  when: osdeps

# create a namespace for osdeps file variables
- name: "include variables from retrieved dependencies files in namespace storage_service"
  include_vars:
    file: "{{ tmpdirname }}/osdeps/archivematica-storage-service/{{ osdeps_file }}"
    name: "storage_service"
  when: osdeps

#######################################################################
# Install dependencies according to osdeps files
#######################################################################

- name: "Install storage service ext. package deps."
  package:
    name: "{{ storage_service.osdeps_packages | json_query('[].name') }}"
    state: "latest"
  when:
    - osdeps
    - storage_service is defined
    - storage_service.osdeps_packages is defined
    - storage_service.osdeps_packages

- name: "Install storage service ext. package deps. 2"
  package:
    name: "{{ storage_service.osdeps_packages_2 | json_query('[].name') }}"
    state: "latest"
  when:
    - osdeps
    - storage_service is defined
    - storage_service.osdeps_packages_2 is defined
    - storage_service.osdeps_packages_2

- name: "Install storage service ext. package deps. 3"
  package:
    name: "{{ storage_service.osdeps_packages_3 | json_query('[].name') }}"
    state: "latest"
  when:
    - osdeps
    - storage_service is defined
    - storage_service.osdeps_packages_3 is defined
    - storage_service.osdeps_packages_3
