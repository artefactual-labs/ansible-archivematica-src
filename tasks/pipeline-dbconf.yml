---

###########################################################
#   5- Database reset (when flag enabled)
###########################################################
# Note that when we are using mysql_db and mysql_user we are assuming that the
# root user has a local ~/.my.cnf configuration file with the credentials in it
# for the MySQL user.


- name: "Drop MCP database"
  mysql_db:
    name: "{{ archivematica_src_am_db_name }}"
    state: "absent"
    login_unix_socket: "{% if ansible_os_family == 'RedHat' %}/var/lib/mysql/mysql.sock{% else %}/var/run/mysqld/mysqld.sock{% endif %}"
  when: "archivematica_src_reset_mcpdb|bool or archivematica_src_reset_am_all|bool"

- name: "Create MySQL database"
  mysql_db:
    name: "{{ archivematica_src_am_db_name }}"
    state: "present"
    collation: "{{ archivematica_src_am_db_collation }}"
    encoding: "{{ archivematica_src_am_db_encoding }}"
    login_unix_socket: "{% if ansible_os_family == 'RedHat' %}/var/lib/mysql/mysql.sock{% else %}/var/run/mysqld/mysqld.sock{% endif %}"
  when: "archivematica_src_reset_mcpdb|bool or archivematica_src_reset_am_all|bool"


###########################################################
#   6- Database migrations
###########################################################

- name: "Run migrations"
  django_manage:
    command: "migrate"
    app_path: "{{ archivematica_src_am_dashboard_app }}"
    pythonpath: "{{ archivematica_src_am_common_app }}"
    virtualenv: "{{ archivematica_src_am_dashboard_virtualenv }}"
  environment: "{{ archivematica_src_am_dashboard_environment }}"
  tags: "amsrc-pipeline-dbconf-syncdb"
