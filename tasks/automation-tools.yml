---

# automation-tools installer

- name: "Get git config global safe directories dir"
  shell: "git config --global --get-all safe.directory || echo ''"
  register: "__git_config_global_safe_dir"
  become_flags: "-E"

- name: "Set Automation-Tools source directory as git safe dir"
  command: "git config --global --add safe.directory {{ archivematica_src_dir }}/automation-tools"
  become_flags: "-E"
  when:
    - archivematica_src_dir + '/automation-tools' not in __git_config_global_safe_dir.stdout_lines

- name: "Checkout out automation tools repository"
  git:
    repo: "{{ archivematica_src_automation_tools_repo }}"
    dest: "{{ archivematica_src_dir }}/automation-tools"
    version: "{{ archivematica_src_automationtools_version }}"
    force: "yes"

- name: "Ensure archivematica user can create virtualenv"
  file:
    path: "/usr/share/archivematica/virtualenvs"
    owner: "archivematica"
    group: "archivematica"
    state: "directory"

- name: "Install pip dependencies in virtualenv"
  become: "yes"
  become_user: "archivematica"
  pip:
    chdir: "{{ archivematica_src_dir }}/automation-tools"
    requirements: "requirements.txt"
    virtualenv: "/usr/share/archivematica/virtualenvs/automation-tools"
    virtualenv_command: "{{ archivematica_src_virtualenv }}"
    virtualenv_python: "{{ archivematica_src_virtualenv_python }}"
    state: latest

- name: "symlink automation-tools source to /usr/lib/archivematica"
  file:
    src: "{{ archivematica_src_dir }}/automation-tools"
    dest: "/usr/lib/archivematica/automation-tools"
    state: "link"

- name: "Create directories for logs/database/PID files"
  file:
    dest: "{{ item }}"
    state: "directory"
    owner: "archivematica"
    group: "archivematica"
  with_items:
    - "/var/log/archivematica/automation-tools"
    - "/var/archivematica/automation-tools"

- name: "Create etc directory for automation tools"
  file:
    dest: "{{ item }}"
    state: "directory"
  with_items:
    - "/etc/archivematica/automation-tools"

- name: "Template automation tools /etc configuration"
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    backup: "yes"
  with_items:
    - "etc/archivematica/automation-tools/transfers.conf"
    - "etc/archivematica/automation-tools/transfer-script.sh"
